//
// Generated by NVIDIA NVVM Compiler
// Compiler built on Tue Feb  7 14:15:59 2012 (1328595359)
// Driver 295.20
//

.version 3.0
.target sm_21, texmode_independent
.address_size 32

.extern .shared .align 4 .b8 shr_1_l_Hist[6144];
.extern .shared .align 4 .b8 shr_2_l_Data[1024];

.entry histogram256(
	.param .u32 .ptr .global .align 4 histogram256_param_0,
	.param .u32 .ptr .global .align 4 histogram256_param_1,
	.param .u32 histogram256_param_2
)
.reqntid 192, 1, 1
{
	.reg .pred 	%p<9>;
	.reg .s32 	%r<132>;


	// inline asm
	mov.u32 	%r19, %tid.x;
	// inline asm
	shl.b32 	%r29, %r19, 3;
	and.b32  	%r4, %r29, -256;
	// inline asm
	mov.u32 	%r20, %tid.x;
	// inline asm
	shl.b32 	%r30, %r20, 2;
	mov.u32 	%r31, shr_1_l_Hist;
	add.s32 	%r32, %r31, %r30;
	mov.u32 	%r130, 0;
	st.shared.u32 	[%r32], %r130;
	// inline asm
	mov.u32 	%r21, %tid.x;
	// inline asm
	shl.b32 	%r34, %r21, 2;
	add.s32 	%r35, %r34, %r31;
	st.shared.u32 	[%r35+768], %r130;
	// inline asm
	mov.u32 	%r22, %tid.x;
	// inline asm
	shl.b32 	%r36, %r22, 2;
	add.s32 	%r37, %r36, %r31;
	st.shared.u32 	[%r37+1536], %r130;
	// inline asm
	mov.u32 	%r23, %tid.x;
	// inline asm
	shl.b32 	%r38, %r23, 2;
	add.s32 	%r39, %r38, %r31;
	st.shared.u32 	[%r39+2304], %r130;
	// inline asm
	mov.u32 	%r24, %tid.x;
	// inline asm
	shl.b32 	%r40, %r24, 2;
	add.s32 	%r41, %r40, %r31;
	st.shared.u32 	[%r41+3072], %r130;
	// inline asm
	mov.u32 	%r25, %tid.x;
	// inline asm
	shl.b32 	%r42, %r25, 2;
	add.s32 	%r43, %r42, %r31;
	st.shared.u32 	[%r43+3840], %r130;
	// inline asm
	mov.u32 	%r26, %tid.x;
	// inline asm
	shl.b32 	%r44, %r26, 2;
	add.s32 	%r45, %r44, %r31;
	st.shared.u32 	[%r45+4608], %r130;
	// inline asm
	mov.u32 	%r27, %tid.x;
	// inline asm
	shl.b32 	%r46, %r27, 2;
	add.s32 	%r47, %r46, %r31;
	st.shared.u32 	[%r47+5376], %r130;
	// inline asm
	mov.u32 	%r28, %tid.x;
	// inline asm
	shl.b32 	%r5, %r28, 27;
	bar.sync 	0;
	// inline asm
	mov.u32 	%r48, %envreg3;
	// inline asm
	// inline asm
	mov.u32 	%r49, %ntid.x;
	// inline asm
	// inline asm
	mov.u32 	%r50, %ctaid.x;
	// inline asm
	// inline asm
	mov.u32 	%r51, %tid.x;
	// inline asm
	add.s32 	%r52, %r51, %r48;
	mad.lo.s32 	%r129, %r50, %r49, %r52;
	ld.param.u32 	%r128, [histogram256_param_2];
	setp.ge.u32 	%p1, %r129, %r128;
	@%p1 bra 	BB0_10;

BB0_1:
	shl.b32 	%r53, %r129, 2;
	ld.param.u32 	%r126, [histogram256_param_1];
	add.s32 	%r54, %r126, %r53;
	ld.global.u32 	%r8, [%r54];
	and.b32  	%r55, %r8, 255;
	add.s32 	%r56, %r55, %r4;
	shl.b32 	%r57, %r56, 2;
	add.s32 	%r9, %r31, %r57;

BB0_2:
	ld.volatile.shared.u32 	%r59, [%r9];
	and.b32  	%r60, %r59, 134217727;
	add.s32 	%r61, %r60, 1;
	or.b32  	%r62, %r61, %r5;
	st.volatile.shared.u32 	[%r9], %r62;
	ld.volatile.shared.u32 	%r63, [%r9];
	setp.ne.s32 	%p2, %r63, %r62;
	@%p2 bra 	BB0_2;

	shr.u32 	%r64, %r8, 8;
	and.b32  	%r65, %r64, 255;
	add.s32 	%r66, %r65, %r4;
	shl.b32 	%r67, %r66, 2;
	add.s32 	%r10, %r31, %r67;

BB0_4:
	ld.volatile.shared.u32 	%r69, [%r10];
	and.b32  	%r70, %r69, 134217727;
	add.s32 	%r71, %r70, 1;
	or.b32  	%r72, %r71, %r5;
	st.volatile.shared.u32 	[%r10], %r72;
	ld.volatile.shared.u32 	%r73, [%r10];
	setp.ne.s32 	%p3, %r73, %r72;
	@%p3 bra 	BB0_4;

	shr.u32 	%r74, %r8, 16;
	and.b32  	%r75, %r74, 255;
	add.s32 	%r76, %r75, %r4;
	shl.b32 	%r77, %r76, 2;
	add.s32 	%r11, %r31, %r77;

BB0_6:
	ld.volatile.shared.u32 	%r79, [%r11];
	and.b32  	%r80, %r79, 134217727;
	add.s32 	%r81, %r80, 1;
	or.b32  	%r82, %r81, %r5;
	st.volatile.shared.u32 	[%r11], %r82;
	ld.volatile.shared.u32 	%r83, [%r11];
	setp.ne.s32 	%p4, %r83, %r82;
	@%p4 bra 	BB0_6;

	shr.u32 	%r84, %r8, 24;
	add.s32 	%r85, %r84, %r4;
	shl.b32 	%r86, %r85, 2;
	add.s32 	%r12, %r31, %r86;

BB0_8:
	ld.volatile.shared.u32 	%r88, [%r12];
	and.b32  	%r89, %r88, 134217727;
	add.s32 	%r90, %r89, 1;
	or.b32  	%r91, %r90, %r5;
	st.volatile.shared.u32 	[%r12], %r91;
	ld.volatile.shared.u32 	%r92, [%r12];
	setp.ne.s32 	%p5, %r92, %r91;
	@%p5 bra 	BB0_8;

	// inline asm
	mov.u32 	%r93, %envreg6;
	// inline asm
	// inline asm
	mov.u32 	%r94, %ntid.x;
	// inline asm
	mad.lo.s32 	%r129, %r94, %r93, %r129;
	ld.param.u32 	%r127, [histogram256_param_2];
	setp.lt.u32 	%p6, %r129, %r127;
	@%p6 bra 	BB0_1;

BB0_10:
	bar.sync 	0;
	// inline asm
	mov.u32 	%r95, %tid.x;
	// inline asm
	setp.gt.u32 	%p7, %r95, 255;
	mov.u32 	%r131, %r95;
	@%p7 bra 	BB0_12;

BB0_11:
	add.s32 	%r99, %r95, %r130;
	shl.b32 	%r100, %r99, 2;
	add.s32 	%r102, %r31, %r100;
	ld.shared.u32 	%r103, [%r102];
	and.b32  	%r104, %r103, 134217727;
	ld.shared.u32 	%r105, [%r102+1024];
	and.b32  	%r106, %r105, 134217727;
	add.s32 	%r107, %r106, %r104;
	ld.shared.u32 	%r108, [%r102+2048];
	and.b32  	%r109, %r108, 134217727;
	add.s32 	%r110, %r109, %r107;
	ld.shared.u32 	%r111, [%r102+3072];
	and.b32  	%r112, %r111, 134217727;
	add.s32 	%r113, %r112, %r110;
	ld.shared.u32 	%r114, [%r102+4096];
	and.b32  	%r115, %r114, 134217727;
	add.s32 	%r116, %r115, %r113;
	ld.shared.u32 	%r117, [%r102+5120];
	and.b32  	%r118, %r117, 134217727;
	add.s32 	%r119, %r118, %r116;
	// inline asm
	mov.u32 	%r97, %envreg0;
	// inline asm
	// inline asm
	mov.u32 	%r98, %ctaid.x;
	// inline asm
	add.s32 	%r120, %r98, %r97;
	shl.b32 	%r121, %r120, 8;
	add.s32 	%r122, %r121, %r131;
	shl.b32 	%r123, %r122, 2;
	ld.param.u32 	%r125, [histogram256_param_0];
	add.s32 	%r124, %r125, %r123;
	st.global.u32 	[%r124], %r119;
	add.s32 	%r131, %r131, 192;
	setp.lt.u32 	%p8, %r131, 256;
	add.s32 	%r130, %r130, 192;
	@%p8 bra 	BB0_11;

BB0_12:
	ret;
}

.entry mergeHistogram256(
	.param .u32 .ptr .global .align 4 mergeHistogram256_param_0,
	.param .u32 .ptr .global .align 4 mergeHistogram256_param_1,
	.param .u32 mergeHistogram256_param_2
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<12>;
	.reg .s32 	%r<125>;


	ld.param.u32 	%r3, [mergeHistogram256_param_2];
	// inline asm
	mov.u32 	%r10, %tid.x;
	// inline asm
	setp.lt.u32 	%p1, %r10, %r3;
	mov.u32 	%r123, %r10;
	@%p1 bra 	BB1_2;

	mov.u32 	%r124, 0;
	bra.uni 	BB1_4;

BB1_2:
	mov.u32 	%r124, 0;

BB1_3:
	// inline asm
	mov.u32 	%r13, %envreg0;
	// inline asm
	// inline asm
	mov.u32 	%r14, %ctaid.x;
	// inline asm
	shl.b32 	%r15, %r123, 8;
	add.s32 	%r16, %r13, %r15;
	add.s32 	%r17, %r16, %r14;
	shl.b32 	%r18, %r17, 2;
	ld.param.u32 	%r121, [mergeHistogram256_param_1];
	add.s32 	%r19, %r121, %r18;
	ld.global.u32 	%r20, [%r19];
	add.s32 	%r124, %r20, %r124;
	add.s32 	%r123, %r123, 256;
	ld.param.u32 	%r122, [mergeHistogram256_param_2];
	setp.lt.u32 	%p2, %r123, %r122;
	@%p2 bra 	BB1_3;

BB1_4:
	// inline asm
	mov.u32 	%r21, %tid.x;
	// inline asm
	shl.b32 	%r22, %r21, 2;
	mov.u32 	%r23, shr_2_l_Data;
	add.s32 	%r24, %r23, %r22;
	st.shared.u32 	[%r24], %r124;
	bar.sync 	0;
	// inline asm
	mov.u32 	%r25, %tid.x;
	// inline asm
	setp.gt.u32 	%p3, %r25, 127;
	@%p3 bra 	BB1_6;

	// inline asm
	mov.u32 	%r26, %tid.x;
	// inline asm
	shl.b32 	%r28, %r26, 2;
	add.s32 	%r30, %r28, %r23;
	ld.shared.u32 	%r31, [%r30+512];
	// inline asm
	mov.u32 	%r27, %tid.x;
	// inline asm
	shl.b32 	%r32, %r27, 2;
	add.s32 	%r33, %r23, %r32;
	ld.shared.u32 	%r34, [%r33];
	add.s32 	%r35, %r34, %r31;
	st.shared.u32 	[%r33], %r35;

BB1_6:
	bar.sync 	0;
	// inline asm
	mov.u32 	%r36, %tid.x;
	// inline asm
	setp.gt.u32 	%p4, %r36, 63;
	@%p4 bra 	BB1_8;

	// inline asm
	mov.u32 	%r37, %tid.x;
	// inline asm
	shl.b32 	%r39, %r37, 2;
	add.s32 	%r41, %r39, %r23;
	ld.shared.u32 	%r42, [%r41+256];
	// inline asm
	mov.u32 	%r38, %tid.x;
	// inline asm
	shl.b32 	%r43, %r38, 2;
	add.s32 	%r44, %r23, %r43;
	ld.shared.u32 	%r45, [%r44];
	add.s32 	%r46, %r45, %r42;
	st.shared.u32 	[%r44], %r46;

BB1_8:
	bar.sync 	0;
	// inline asm
	mov.u32 	%r47, %tid.x;
	// inline asm
	setp.gt.u32 	%p5, %r47, 31;
	@%p5 bra 	BB1_10;

	// inline asm
	mov.u32 	%r48, %tid.x;
	// inline asm
	shl.b32 	%r50, %r48, 2;
	add.s32 	%r52, %r50, %r23;
	ld.shared.u32 	%r53, [%r52+128];
	// inline asm
	mov.u32 	%r49, %tid.x;
	// inline asm
	shl.b32 	%r54, %r49, 2;
	add.s32 	%r55, %r23, %r54;
	ld.shared.u32 	%r56, [%r55];
	add.s32 	%r57, %r56, %r53;
	st.shared.u32 	[%r55], %r57;

BB1_10:
	bar.sync 	0;
	// inline asm
	mov.u32 	%r58, %tid.x;
	// inline asm
	setp.gt.u32 	%p6, %r58, 15;
	@%p6 bra 	BB1_12;

	// inline asm
	mov.u32 	%r59, %tid.x;
	// inline asm
	shl.b32 	%r61, %r59, 2;
	add.s32 	%r63, %r61, %r23;
	ld.shared.u32 	%r64, [%r63+64];
	// inline asm
	mov.u32 	%r60, %tid.x;
	// inline asm
	shl.b32 	%r65, %r60, 2;
	add.s32 	%r66, %r23, %r65;
	ld.shared.u32 	%r67, [%r66];
	add.s32 	%r68, %r67, %r64;
	st.shared.u32 	[%r66], %r68;

BB1_12:
	bar.sync 	0;
	// inline asm
	mov.u32 	%r69, %tid.x;
	// inline asm
	setp.gt.u32 	%p7, %r69, 7;
	@%p7 bra 	BB1_14;

	// inline asm
	mov.u32 	%r70, %tid.x;
	// inline asm
	shl.b32 	%r72, %r70, 2;
	add.s32 	%r74, %r72, %r23;
	ld.shared.u32 	%r75, [%r74+32];
	// inline asm
	mov.u32 	%r71, %tid.x;
	// inline asm
	shl.b32 	%r76, %r71, 2;
	add.s32 	%r77, %r23, %r76;
	ld.shared.u32 	%r78, [%r77];
	add.s32 	%r79, %r78, %r75;
	st.shared.u32 	[%r77], %r79;

BB1_14:
	bar.sync 	0;
	// inline asm
	mov.u32 	%r80, %tid.x;
	// inline asm
	setp.gt.u32 	%p8, %r80, 3;
	@%p8 bra 	BB1_16;

	// inline asm
	mov.u32 	%r81, %tid.x;
	// inline asm
	shl.b32 	%r83, %r81, 2;
	add.s32 	%r85, %r83, %r23;
	ld.shared.u32 	%r86, [%r85+16];
	// inline asm
	mov.u32 	%r82, %tid.x;
	// inline asm
	shl.b32 	%r87, %r82, 2;
	add.s32 	%r88, %r23, %r87;
	ld.shared.u32 	%r89, [%r88];
	add.s32 	%r90, %r89, %r86;
	st.shared.u32 	[%r88], %r90;

BB1_16:
	bar.sync 	0;
	// inline asm
	mov.u32 	%r91, %tid.x;
	// inline asm
	setp.gt.u32 	%p9, %r91, 1;
	@%p9 bra 	BB1_18;

	// inline asm
	mov.u32 	%r92, %tid.x;
	// inline asm
	shl.b32 	%r94, %r92, 2;
	add.s32 	%r96, %r94, %r23;
	ld.shared.u32 	%r97, [%r96+8];
	// inline asm
	mov.u32 	%r93, %tid.x;
	// inline asm
	shl.b32 	%r98, %r93, 2;
	add.s32 	%r99, %r23, %r98;
	ld.shared.u32 	%r100, [%r99];
	add.s32 	%r101, %r100, %r97;
	st.shared.u32 	[%r99], %r101;

BB1_18:
	bar.sync 	0;
	// inline asm
	mov.u32 	%r102, %tid.x;
	// inline asm
	setp.ne.s32 	%p10, %r102, 0;
	@%p10 bra 	BB1_20;

	// inline asm
	mov.u32 	%r103, %tid.x;
	// inline asm
	shl.b32 	%r105, %r103, 2;
	add.s32 	%r107, %r105, %r23;
	ld.shared.u32 	%r108, [%r107+4];
	// inline asm
	mov.u32 	%r104, %tid.x;
	// inline asm
	shl.b32 	%r109, %r104, 2;
	add.s32 	%r110, %r23, %r109;
	ld.shared.u32 	%r111, [%r110];
	add.s32 	%r112, %r111, %r108;
	st.shared.u32 	[%r110], %r112;

BB1_20:
	// inline asm
	mov.u32 	%r113, %tid.x;
	// inline asm
	setp.eq.s32 	%p11, %r113, 0;
	@%p11 bra 	BB1_22;

	ret;

BB1_22:
	ld.shared.u32 	%r116, [shr_2_l_Data];
	// inline asm
	mov.u32 	%r114, %envreg0;
	// inline asm
	// inline asm
	mov.u32 	%r115, %ctaid.x;
	// inline asm
	add.s32 	%r117, %r115, %r114;
	shl.b32 	%r118, %r117, 2;
	ld.param.u32 	%r120, [mergeHistogram256_param_0];
	add.s32 	%r119, %r120, %r118;
	st.global.u32 	[%r119], %r116;
	ret;
}